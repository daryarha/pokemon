[{"D:\\Work\\Tokopedia\\pokemon-test\\src\\reportWebVitals.js":"1","D:\\Work\\Tokopedia\\pokemon-test\\src\\App.js":"2","D:\\Work\\Tokopedia\\pokemon-test\\src\\index.js":"3","D:\\Work\\Tokopedia\\pokemon-test\\src\\ListPokemon.js":"4","D:\\Work\\Tokopedia\\pokemon-test\\src\\DetailPokemon.js":"5","D:\\Work\\Tokopedia\\pokemon-test\\src\\Capitalize.js":"6","D:\\Work\\Tokopedia\\pokemon-test\\src\\CardGeneral.js":"7","D:\\Work\\Tokopedia\\pokemon-test\\src\\MyPokemon.js":"8"},{"size":362,"mtime":1611653677050,"results":"9","hashOfConfig":"10"},{"size":1015,"mtime":1612112273784,"results":"11","hashOfConfig":"10"},{"size":446,"mtime":1612103636988,"results":"12","hashOfConfig":"10"},{"size":2831,"mtime":1612105436523,"results":"13","hashOfConfig":"10"},{"size":6311,"mtime":1612105419463,"results":"14","hashOfConfig":"10"},{"size":104,"mtime":1611929035653,"results":"15","hashOfConfig":"10"},{"size":688,"mtime":1612112350312,"results":"16","hashOfConfig":"10"},{"size":2961,"mtime":1612105430474,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ahv7ht",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Work\\Tokopedia\\pokemon-test\\src\\reportWebVitals.js",[],["39","40"],"D:\\Work\\Tokopedia\\pokemon-test\\src\\App.js",[],["41","42"],"D:\\Work\\Tokopedia\\pokemon-test\\src\\index.js",[],"D:\\Work\\Tokopedia\\pokemon-test\\src\\ListPokemon.js",["43"],"import React, { useState, useEffect } from 'react';\r\nimport CardGeneral from './CardGeneral';\r\nimport CapitalizeWord from './Capitalize.js';\r\n\r\nconst gqlQuery = `query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      results {\r\n        id\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }`;\r\n  \r\n  const gqlVariables = {};\r\n    \r\n  \r\n  const ListPokemon = () => {\r\n    const [data, setData] = useState([]);\r\n    const myPokemon = JSON.parse(localStorage.getItem('myPokemon')) || [];\r\n    const pokeIds = JSON.parse(localStorage.getItem('pokemonId')) || [];\r\n    const countOwns = JSON.parse(localStorage.getItem('countOwned')) || [];\r\n\r\n    useEffect(() => {\r\n      let dataId = [];\r\n      let dataOwned = [];\r\n      myPokemon.forEach((pokemon, index) => {\r\n        if(dataId.findIndex((element) => element===pokemon.id) >= 0) {\r\n          const idx = dataId.findIndex(element => element===pokemon.id);\r\n          dataOwned[idx] += 1;\r\n        } else {\r\n          dataId.push(pokemon.id);\r\n          dataOwned.push(1);\r\n        }\r\n      });\r\n      localStorage.setItem('pokemonId', JSON.stringify(dataId));\r\n      localStorage.setItem('countOwned', JSON.stringify(dataOwned));\r\n      \r\n      fetch('https://graphql-pokeapi.vercel.app/api/graphql', {\r\n          credentials: 'omit',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            query: gqlQuery,\r\n            variables: gqlVariables,\r\n          }),\r\n          method: 'POST',\r\n        })\r\n          .then((res) => res.json())\r\n          .then((res) => setData(res.data.pokemons.results));\r\n    }, []);\r\n  \r\n    document.title = \"Pokemon List Card | Pokemon\";\r\n\r\n    const checkOwned = (pokemonId) => {\r\n      if(pokeIds.findIndex(element => element===pokemonId) >= 0) {\r\n        const idx = pokeIds.findIndex(element => element===pokemonId);\r\n        const dataOwn = countOwns[idx];\r\n        return (\r\n          <React.Fragment>\r\n          Total owned: {dataOwn}\r\n          </React.Fragment>\r\n          )\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n          Total owned: 0\r\n          </React.Fragment>\r\n          )\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n        {\r\n            data.map((pokemon) => \r\n            <CardGeneral \r\n                key={pokemon.name}\r\n                header={\r\n                  <React.Fragment>\r\n                  {CapitalizeWord(pokemon.name)} #{pokemon.id}\r\n                  </React.Fragment>\r\n                }\r\n                description={\r\n                  checkOwned(pokemon.id)\r\n                }\r\n                name={pokemon.name}\r\n                image={pokemon.image}/>\r\n            )\r\n        }\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export default ListPokemon\r\n  \r\n  \r\n  \r\n  ",["44","45"],"D:\\Work\\Tokopedia\\pokemon-test\\src\\DetailPokemon.js",["46"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport CapitalizeWord from './Capitalize.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst gqlQuery = `query pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      id\r\n      name\r\n      weight\r\n      height\r\n      base_experience\r\n      sprites {\r\n        front_default\r\n      }      \r\n    \tabilities {\r\n        ability {\r\n          name\r\n        }\r\n      }\r\n      moves {\r\n        move {\r\n          name\r\n        }\r\n      }\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n  let gqlVariables;\r\n\r\n  \r\n  const Attribute = ({ title, value }) => {\r\n    return (\r\n      <div className=\"attribute\">\r\n        <div className=\"card-attribute-title\">\r\n          {title}\r\n        </div>\r\n        <div className=\"card-attribute-value\">\r\n          {value}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const DetailPokemon = () => {\r\n    const [dataDetail, setDataDetail] = useState([]);\r\n    const [dataMyPokemon, setMyPokemon] = useState(\r\n      JSON.parse(localStorage.getItem('myPokemon')) || []\r\n    );\r\n    const pokemonName = useParams().pokemonName;\r\n    // console.log(JSON.parse(dataMyPokemon));\r\n\r\n    gqlVariables =  {\r\n        \"name\": pokemonName\r\n    };\r\n\r\n    useEffect(() => {\r\n      try {\r\n        localStorage.setItem('myPokemon', JSON.stringify(dataMyPokemon));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }, [dataMyPokemon]);\r\n\r\n    const savePokemon = name => {\r\n      const oldData = dataMyPokemon;\r\n      const dataStore = {\r\n        nickname: name,\r\n        id: id,\r\n        name: pokemonName,\r\n        image: image\r\n      }\r\n      if(oldData) {\r\n        setMyPokemon(oldData.concat(dataStore));\r\n      } else {\r\n        setMyPokemon(dataStore);\r\n      }\r\n    }\r\n\r\n    function catchPokemon() {\r\n      const result = Math.random() < 0.5;\r\n      const icon = result ? 'success' : 'error';\r\n      const main_text = result ? `You catch the ${namePoke}!` : `The ${namePoke} run away!`;\r\n      const sub_text = result ? 'Give your new pokemon a name!' : '';\r\n      const type_input = result ? 'text' : false;\r\n      Swal.fire({\r\n        title: main_text,\r\n        text: sub_text,\r\n        input: type_input,\r\n        icon: icon,\r\n        inputValidator: (value) => {\r\n          return new Promise((resolve) => {\r\n            if (!value) {\r\n              resolve('You need to give a name!')\r\n            } else {              \r\n              dataMyPokemon.map(dt => {\r\n                if(dt.nickname===value && dt.id===id){                  \r\n                  resolve('Name already exist! <br/> Give another name')\r\n                }\r\n              });\r\n              resolve()\r\n            }\r\n          })\r\n        },\r\n        showCancelButton: true,\r\n        showConfirmButton: result,\r\n        confirmButtonColor: '#3085d6',\r\n        confirmButtonText: 'Save pokemon!'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          savePokemon(result.value);\r\n          Swal.fire(\r\n            'New pokemon has been saved!',\r\n            'Go to my pokemon page for detail!',\r\n            'success'\r\n          )\r\n        }\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('https://graphql-pokeapi.vercel.app/api/graphql', {\r\n            credentials: 'omit',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              query: gqlQuery,\r\n              variables: gqlVariables,\r\n            }),\r\n            method: 'POST',\r\n          })\r\n            .then((res) => res.json())\r\n            .then((res) => setDataDetail(res.data.pokemon));\r\n    }, []);\r\n    \r\n    const namePoke = CapitalizeWord(pokemonName);\r\n    let id;\r\n    if(dataDetail.id){\r\n      id = dataDetail.id;\r\n    }\r\n    let image;\r\n    if(dataDetail.sprites){\r\n      image = dataDetail.sprites.front_default;\r\n    }\r\n    document.title = `${namePoke} | Pokemon`;\r\n    return (\r\n      <div className=\"base-detail\">\r\n        <br/>\r\n        {namePoke} <span className=\"number\">#{dataDetail.id}</span>\r\n        <div className=\"container-detail\">\r\n            <div className=\"slot-image\">\r\n              {/* <amp-img layout=\"responsive\" height=\"200\" width=\"200\" src={dataDetail.sprites && dataDetail.sprites.front_default} alt={namePoke}> */}\r\n              {/* </amp-img> */}\r\n              <img width=\"100%\" src={dataDetail.sprites && dataDetail.sprites.front_default} alt={namePoke}/>\r\n            </div>\r\n            <div className=\"slot-detail\">\r\n              <div className=\"card-attribute\">                 \r\n                <Attribute title={\"Height\"} value={`${dataDetail.height*10} cm`} />                              \r\n                <Attribute title={\"Weight\"} value={`${dataDetail.weight/10} kg`} />                \r\n                <Attribute title={\"Base Experience\"} value={dataDetail.base_experience} />                \r\n                <Attribute title={\"Type\"} \r\n                  value={dataDetail.types && dataDetail.types.map(tp =>\r\n                    <div key={tp.type.name}>{CapitalizeWord(tp.type.name.replace('-', ' '))}</div>\r\n                  )} \r\n                />                \r\n                <Attribute title={\"Abilities\"} \r\n                  value={dataDetail.abilities && dataDetail.abilities.map(ab =>\r\n                    <div key={ab.ability.name}>{CapitalizeWord(ab.ability.name.replace('-', ' '))}</div>\r\n                  )}\r\n                />\r\n                             \r\n              </div>\r\n              <button className=\"btn-catch\" onClick={catchPokemon}>\r\n                Catch Pokemon \r\n                <amp-img height=\"28\" width=\"28\" class=\"img-pokeball\" src=\"/favicon2.ico\" alt=\"pokeball\"></amp-img>\r\n              </button>\r\n            </div>\r\n        </div>\r\n        <div className=\"card-moves\">\r\n          List of {namePoke} Moves\r\n          <div className=\"list-moves\">                        \r\n            {dataDetail.moves && dataDetail.moves.map(mv =>\r\n              <div className=\"btn-move\" key={mv.move.name}>\r\n                {CapitalizeWord(mv.move.name.replace('-', ' '))}\r\n              </div>\r\n            )}   \r\n          </div>     \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default DetailPokemon\r\n  \r\n  \r\n  \r\n  ","D:\\Work\\Tokopedia\\pokemon-test\\src\\Capitalize.js",[],"D:\\Work\\Tokopedia\\pokemon-test\\src\\CardGeneral.js",[],"D:\\Work\\Tokopedia\\pokemon-test\\src\\MyPokemon.js",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":51,"column":8,"nodeType":"57","endLine":51,"endColumn":10,"suggestions":"58"},{"ruleId":"49","replacedBy":"59"},{"ruleId":"51","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":100,"column":36,"nodeType":"63","messageId":"64","endLine":100,"endColumn":38},{"ruleId":"65","severity":1,"message":"66","line":6,"column":7,"nodeType":"67","messageId":"68","endLine":6,"endColumn":15},{"ruleId":"65","severity":1,"message":"69","line":22,"column":9,"nodeType":"67","messageId":"68","endLine":22,"endColumn":21},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'myPokemon'. Either include it or remove the dependency array.","ArrayExpression",["72"],["70"],["71"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'gqlQuery' is assigned a value but never used.","Identifier","unusedVar","'gqlVariables' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [myPokemon]",{"range":"75","text":"76"},[1664,1666],"[myPokemon]"]