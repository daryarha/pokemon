{"version":3,"sources":["CardGeneral.js","Capitalize.js","ListPokemon.js","DetailPokemon.js","MyPokemon.js","App.js","reportWebVitals.js","index.js"],"names":["CardGeneral","header","name","image","description","className","to","layout","height","width","src","alt","CapitalizeWord","str","charAt","toUpperCase","slice","gqlVariables","ListPokemon","useState","data","setData","myPokemon","JSON","parse","localStorage","getItem","pokeIds","countOwns","useEffect","dataId","dataOwned","forEach","pokemon","index","findIndex","element","id","idx","push","setItem","stringify","fetch","credentials","headers","body","query","variables","method","then","res","json","pokemons","results","document","title","checkOwned","pokemonId","dataOwn","Fragment","map","Attribute","value","DetailPokemon","dataDetail","setDataDetail","dataMyPokemon","setMyPokemon","pokemonName","useParams","error","console","log","namePoke","sprites","front_default","weight","base_experience","types","tp","type","replace","abilities","ab","ability","onClick","result","Math","random","icon","main_text","sub_text","type_input","Swal","fire","text","input","inputValidator","Promise","resolve","dt","nickname","showCancelButton","showConfirmButton","confirmButtonColor","confirmButtonText","isConfirmed","dataStore","concat","savePokemon","class","moves","mv","move","MyPokemon","length","html","showDenyButton","denyButtonText","isDenied","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.31e4677d.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\n  const CardGeneral = ({ header, name, image, description }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <Link to={`/pokemon/${name}`}>\r\n            <div className=\"card-header\">\r\n            {header}\r\n            </div>\r\n            <amp-img layout=\"responsive\" height=\"200\" width=\"200\" src={image} alt={name}></amp-img>\r\n            <div className=\"overlay\">\r\n            <button className=\"btn-detail\">Detail</button>\r\n            </div>\r\n            </Link>\r\n            <div className=\"card-description\">\r\n            {description}\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export default CardGeneral","export default function CapitalizeWord(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport CardGeneral from './CardGeneral';\r\nimport CapitalizeWord from './Capitalize.js';\r\n\r\nconst gqlQuery = `query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      results {\r\n        id\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }`;\r\n  \r\n  const gqlVariables = {};\r\n    \r\n  \r\n  const ListPokemon = () => {\r\n    const [data, setData] = useState([]);\r\n    const myPokemon = JSON.parse(localStorage.getItem('myPokemon')) || [];\r\n    const pokeIds = JSON.parse(localStorage.getItem('pokemonId')) || [];\r\n    const countOwns = JSON.parse(localStorage.getItem('countOwned')) || [];\r\n\r\n    useEffect(() => {\r\n      let dataId = [];\r\n      let dataOwned = [];\r\n      myPokemon.forEach((pokemon, index) => {\r\n        if(dataId.findIndex((element) => element===pokemon.id) >= 0) {\r\n          const idx = dataId.findIndex(element => element===pokemon.id);\r\n          dataOwned[idx] += 1;\r\n        } else {\r\n          dataId.push(pokemon.id);\r\n          dataOwned.push(1);\r\n        }\r\n      });\r\n      localStorage.setItem('pokemonId', JSON.stringify(dataId));\r\n      localStorage.setItem('countOwned', JSON.stringify(dataOwned));\r\n      \r\n      fetch('https://graphql-pokeapi.vercel.app/api/graphql', {\r\n          credentials: 'omit',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            query: gqlQuery,\r\n            variables: gqlVariables,\r\n          }),\r\n          method: 'POST',\r\n        })\r\n          .then((res) => res.json())\r\n          .then((res) => setData(res.data.pokemons.results));\r\n    }, []);\r\n  \r\n    document.title = \"Pokemon List Card | Pokemon\";\r\n\r\n    const checkOwned = (pokemonId) => {\r\n      if(pokeIds.findIndex(element => element===pokemonId) >= 0) {\r\n        const idx = pokeIds.findIndex(element => element===pokemonId);\r\n        const dataOwn = countOwns[idx];\r\n        return (\r\n          <React.Fragment>\r\n          Total owned: {dataOwn}\r\n          </React.Fragment>\r\n          )\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n          Total owned: 0\r\n          </React.Fragment>\r\n          )\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n        {\r\n            data.map((pokemon) => \r\n            <CardGeneral \r\n                key={pokemon.name}\r\n                header={\r\n                  <React.Fragment>\r\n                  {CapitalizeWord(pokemon.name)} #{pokemon.id}\r\n                  </React.Fragment>\r\n                }\r\n                description={\r\n                  checkOwned(pokemon.id)\r\n                }\r\n                name={pokemon.name}\r\n                image={pokemon.image}/>\r\n            )\r\n        }\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export default ListPokemon\r\n  \r\n  \r\n  \r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport CapitalizeWord from './Capitalize.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst gqlQuery = `query pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      id\r\n      name\r\n      weight\r\n      height\r\n      base_experience\r\n      sprites {\r\n        front_default\r\n      }      \r\n    \tabilities {\r\n        ability {\r\n          name\r\n        }\r\n      }\r\n      moves {\r\n        move {\r\n          name\r\n        }\r\n      }\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n  let gqlVariables;\r\n\r\n  \r\n  const Attribute = ({ title, value }) => {\r\n    return (\r\n      <div className=\"attribute\">\r\n        <div className=\"card-attribute-title\">\r\n          {title}\r\n        </div>\r\n        <div className=\"card-attribute-value\">\r\n          {value}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const DetailPokemon = () => {\r\n    const [dataDetail, setDataDetail] = useState([]);\r\n    const [dataMyPokemon, setMyPokemon] = useState(\r\n      JSON.parse(localStorage.getItem('myPokemon')) || []\r\n    );\r\n    const pokemonName = useParams().pokemonName;\r\n    // console.log(JSON.parse(dataMyPokemon));\r\n\r\n    gqlVariables =  {\r\n        \"name\": pokemonName\r\n    };\r\n\r\n    useEffect(() => {\r\n      try {\r\n        localStorage.setItem('myPokemon', JSON.stringify(dataMyPokemon));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }, [dataMyPokemon]);\r\n\r\n    const savePokemon = name => {\r\n      const oldData = dataMyPokemon;\r\n      const dataStore = {\r\n        nickname: name,\r\n        id: id,\r\n        name: pokemonName,\r\n        image: image\r\n      }\r\n      if(oldData) {\r\n        setMyPokemon(oldData.concat(dataStore));\r\n      } else {\r\n        setMyPokemon(dataStore);\r\n      }\r\n    }\r\n\r\n    function catchPokemon() {\r\n      const result = Math.random() < 0.5;\r\n      const icon = result ? 'success' : 'error';\r\n      const main_text = result ? `You catch the ${namePoke}!` : `The ${namePoke} run away!`;\r\n      const sub_text = result ? 'Give your new pokemon a name!' : '';\r\n      const type_input = result ? 'text' : false;\r\n      Swal.fire({\r\n        title: main_text,\r\n        text: sub_text,\r\n        input: type_input,\r\n        icon: icon,\r\n        inputValidator: (value) => {\r\n          return new Promise((resolve) => {\r\n            if (!value) {\r\n              resolve('You need to give a name!')\r\n            } else {              \r\n              dataMyPokemon.map(dt => {\r\n                if(dt.nickname===value && dt.id===id){                  \r\n                  resolve('Name already exist! <br/> Give another name')\r\n                }\r\n              });\r\n              resolve()\r\n            }\r\n          })\r\n        },\r\n        showCancelButton: true,\r\n        showConfirmButton: result,\r\n        confirmButtonColor: '#3085d6',\r\n        confirmButtonText: 'Save pokemon!'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          savePokemon(result.value);\r\n          Swal.fire(\r\n            'New pokemon has been saved!',\r\n            'Go to my pokemon page for detail!',\r\n            'success'\r\n          )\r\n        }\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('https://graphql-pokeapi.vercel.app/api/graphql', {\r\n            credentials: 'omit',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              query: gqlQuery,\r\n              variables: gqlVariables,\r\n            }),\r\n            method: 'POST',\r\n          })\r\n            .then((res) => res.json())\r\n            .then((res) => setDataDetail(res.data.pokemon));\r\n    }, []);\r\n    \r\n    const namePoke = CapitalizeWord(pokemonName);\r\n    let id;\r\n    if(dataDetail.id){\r\n      id = dataDetail.id;\r\n    }\r\n    let image;\r\n    if(dataDetail.sprites){\r\n      image = dataDetail.sprites.front_default;\r\n    }\r\n    document.title = `${namePoke} | Pokemon`;\r\n    return (\r\n      <div className=\"base-detail\">\r\n        <br/>\r\n        {namePoke} <span className=\"number\">#{dataDetail.id}</span>\r\n        <div className=\"container-detail\">\r\n            <div className=\"slot-image\">\r\n              {/* <amp-img layout=\"responsive\" height=\"200\" width=\"200\" src={dataDetail.sprites && dataDetail.sprites.front_default} alt={namePoke}> */}\r\n              {/* </amp-img> */}\r\n              <img width=\"100%\" src={dataDetail.sprites && dataDetail.sprites.front_default} alt={namePoke}/>\r\n            </div>\r\n            <div className=\"slot-detail\">\r\n              <div className=\"card-attribute\">                 \r\n                <Attribute title={\"Height\"} value={`${dataDetail.height*10} cm`} />                              \r\n                <Attribute title={\"Weight\"} value={`${dataDetail.weight/10} kg`} />                \r\n                <Attribute title={\"Base Experience\"} value={dataDetail.base_experience} />                \r\n                <Attribute title={\"Type\"} \r\n                  value={dataDetail.types && dataDetail.types.map(tp =>\r\n                    <div key={tp.type.name}>{CapitalizeWord(tp.type.name.replace('-', ' '))}</div>\r\n                  )} \r\n                />                \r\n                <Attribute title={\"Abilities\"} \r\n                  value={dataDetail.abilities && dataDetail.abilities.map(ab =>\r\n                    <div key={ab.ability.name}>{CapitalizeWord(ab.ability.name.replace('-', ' '))}</div>\r\n                  )}\r\n                />\r\n                             \r\n              </div>\r\n              <button className=\"btn-catch\" onClick={catchPokemon}>\r\n                Catch Pokemon \r\n                <amp-img height=\"28\" width=\"28\" class=\"img-pokeball\" src=\"/favicon2.ico\" alt=\"pokeball\"></amp-img>\r\n              </button>\r\n            </div>\r\n        </div>\r\n        <div className=\"card-moves\">\r\n          List of {namePoke} Moves\r\n          <div className=\"list-moves\">                        \r\n            {dataDetail.moves && dataDetail.moves.map(mv =>\r\n              <div className=\"btn-move\" key={mv.move.name}>\r\n                {CapitalizeWord(mv.move.name.replace('-', ' '))}\r\n              </div>\r\n            )}   \r\n          </div>     \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default DetailPokemon\r\n  \r\n  \r\n  \r\n  ","import React, { useState, useEffect } from 'react';\r\nimport CardGeneral from './CardGeneral';\r\nimport CapitalizeWord from './Capitalize.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst gqlQuery = `query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      count\r\n      next\r\n      previous\r\n      status\r\n      message\r\n      results {\r\n        id\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }`;\r\n  \r\n  const gqlVariables = {};\r\n    \r\n  \r\n  const MyPokemon = () => {\r\n    const [myPokemon, setMyPokemon] = useState(\r\n      JSON.parse(localStorage.getItem('myPokemon')) || []\r\n    );\r\n  \r\n    document.title = \"My Pokemon Card | Pokemon\";\r\n\r\n    \r\n    useEffect(() => {\r\n        try {\r\n          localStorage.setItem('myPokemon', JSON.stringify(myPokemon));\r\n          console.log(myPokemon);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }, [myPokemon]);\r\n\r\n\r\n    const releasePokemon = (idx, name, nickname) => {        \r\n      Swal.fire({\r\n        title: 'You are about to <br/> release a pokemon',\r\n        html: `Pokemon you are going to release is <br/> <b>${nickname}</b> the <b>${name}</b> <br/> Are you sure about this?`,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        showDenyButton: true,\r\n        showConfirmButton: false,\r\n        denyButtonText: 'Release pokemon!'\r\n      }).then((result) => {\r\n        if (result.isDenied) {\r\n          setMyPokemon(myPokemon.slice(0, idx).concat(myPokemon.slice(idx+1, myPokemon.length)))\r\n          Swal.fire(\r\n            'A pokemon has been released!',\r\n            'Go catch a new pokemon in list page',\r\n            'success'\r\n          )\r\n        }\r\n      });\r\n    }\r\n\r\n    console.log(myPokemon);\r\n\r\n    if(!myPokemon.length){\r\n        Swal.fire({\r\n          title: 'You dont have any pokemon at the moment',\r\n          html: `Catch the pokemon in the list page`,\r\n          icon: 'info',\r\n        });\r\n    }     \r\n    return (\r\n        <div className=\"cards\">\r\n        {\r\n            myPokemon.map((pokemon, index) => \r\n            <CardGeneral \r\n                key={pokemon.nickname+pokemon.id}\r\n                header={\r\n                    <React.Fragment>\r\n                    {CapitalizeWord(pokemon.name)} #{pokemon.id}\r\n                    <br/>\r\n                    Nickname: {pokemon.nickname}\r\n                    </React.Fragment>\r\n                }\r\n                description={\r\n                    <button className=\"btn-catch\" onClick={() => releasePokemon(index, pokemon.name, pokemon.nickname)}>\r\n                      Release \r\n                      <amp-img class=\"img-pokeball\" src=\"/favicon2.ico\" alt=\"pokeball\" height=\"15\" width=\"15\"></amp-img>\r\n                    </button>\r\n                }\r\n                name={pokemon.name}\r\n                image={pokemon.image}/>\r\n            )\r\n        }\r\n        </div>\r\n    );\r\n\r\n  }\r\n\r\n  export default MyPokemon\r\n  \r\n  \r\n  \r\n  ","import { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport React from 'react';\nimport ListPokemon from \"./ListPokemon\";\nimport DetailPokemon from \"./DetailPokemon\";\nimport MyPokemon from \"./MyPokemon\";\n\nconst App = () => {    \n  document.title = \"Pokemon List Card | Pokemon\";\n\n  return (    \n    <Router>\n      <div className=\"container\">\n        <nav>\n          <ul>\n            <li>\n              <Link exact={true} to=\"/\" className=\"nav-item\">Pokemon List Card</Link>\n            </li>\n            <li>\n              <Link to=\"/my\" className=\"nav-item\">My Pokemon Card</Link>\n            </li>\n          </ul>\n        </nav><br/>\n        <div className=\"content\">\n          <Route exact={true} path=\"/\" component={ListPokemon}/>          \n          <Route path=\"/my\" component={MyPokemon}/>\n          <Route path=\"/pokemon/:pokemonName\" component={DetailPokemon}/>          \n        </div>\n      </div>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}